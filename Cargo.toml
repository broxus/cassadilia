[package]
name = "cassadilia"
version = "0.3.0"
edition = "2024"
rust-version = "1.87"
authors = ["0xdeafbeef"]
description = "A content-addressable storage (CAS) system optimized for large blobs with read-mostly access patterns"
license = "MIT OR Apache-2.0"
repository = "https://github.com/broxus/cassadilia"
homepage = "https://github.com/broxus/cassadilia"
documentation = "https://docs.rs/cassadilia"
readme = "README.md"
keywords = ["storage", "content-addressable", "cas", "blob", "database"]
categories = ["database", "filesystem", "data-structures"]

[dependencies]
ahash = "0.8"
blake3 = { version = "1", features = ["mmap", "rayon"] }
bytes = "1"
hex = "0.4"
libc = "0.2.174"
parking_lot = { version = "0.12", features = ["arc_lock"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tempfile = "3"
thiserror = "2"
tracing = "0.1"

[dev-dependencies]
anyhow = { version = "1", features = ["backtrace"] }
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }

[profile.test]
opt-level = 0
debug = true
lto = false
codegen-units = 1
incremental = false

[workspace.lints.rust]
future_incompatible = "warn"
nonstandard_style = "warn"
rust_2018_idioms = "warn"

[lints.clippy]
all = { level = "warn", priority = -1 }
await_holding_lock = "warn"
char_lit_as_u8 = "warn"
checked_conversions = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
disallowed_methods = "warn"
doc_markdown = "warn"
empty_enum = "warn"
enum_glob_use = "warn"
exit = "warn"
expl_impl_clone_on_copy = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
fallible_impl_from = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp_const = "warn"
fn_params_excessive_bools = "warn"
from_iter_instead_of_collect = "warn"
if_let_mutex = "warn"
implicit_clone = "warn"
imprecise_flops = "warn"
inefficient_to_string = "warn"
invalid_upcast_comparisons = "warn"
large_digit_groups = "warn"
large_futures = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
let_unit_value = "warn"
linkedlist = "warn"
lossy_float_literal = "warn"
macro_use_imports = "warn"
manual_ok_or = "warn"
map_err_ignore = "warn"
map_flatten = "warn"
map_unwrap_or = "warn"
match_same_arms = "warn"
match_wild_err_arm = "warn"
match_wildcard_for_single_variants = "warn"
mem_forget = "warn"
missing_enforced_import_renames = "warn"
mut_mut = "warn"
mutex_integer = "warn"
needless_borrow = "warn"
needless_continue = "warn"
needless_for_each = "warn"
option_option = "warn"
path_buf_push_overwrite = "warn"
ptr_as_ptr = "warn"
print_stdout = "warn"
print_stderr = "warn"
rc_mutex = "warn"
ref_option_ref = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
semicolon_if_nothing_returned = "warn"
string_add_assign = "warn"
string_add = "warn"
string_lit_as_bytes = "warn"
string_to_string = "warn"
todo = "warn"
trait_duplication_in_bounds = "warn"
unimplemented = "warn"
unnested_or_patterns = "warn"
unused_self = "warn"
useless_transmute = "warn"
verbose_file_reads = "warn"
zero_sized_map_values = "warn"
